def func1(arg1, arg2):
    if arg1 < arg2:
        var7 = class2()
    else:
        var7 = class4()
    for var8 in (4 ^ (arg1 + i) for i in xrange(44)):
        var7.func3(arg1, arg2)
    var24 = func6(arg2, arg1)
    if arg2 < arg2:
        var29 = class7()
    else:
        var29 = class9()
    for var30 in [(7 - arg1) ^ (((2 ^ i ^ var24) | arg2) | var24) - i for i in range(37)]:
        var31 = var29.func8
        var31(var24, var24)
    var32 = -657 | var24
    var33 = var24 - -189998497
    var34 = (var24 - var33) | arg1 + var33
    var35 = var24 - -1830153418 | var32 & var32
    var36 = var35 - 1282737924
    var37 = var32 & arg2 | var33 ^ var36
    var38 = (-98 - var32) + var36 & var35
    var39 = var24 + arg1 | var24 - var35
    var40 = var36 + (var39 - 860 - var24)
    var41 = (var40 + arg1 - var33) - var37
    if var38 < var33:
        var42 = (var41 - var32 ^ var34) | 2047494081
    else:
        var42 = var36 ^ var32
    var43 = var38 + var38
    result = var35 & var38 & arg1
    return result
class class9(object):
    def func8(self, arg27, arg28):
        return 0
class class7(class9):
    def func8(self, arg25, arg26):
        result = -1 + arg25
        return result
def func6(arg9, arg10):
    var11 = (arg9 - -1644175219) + -1433971156 & arg9
    var12 = (-1158671152 + 683 - var11) ^ var11
    var13 = ((arg10 & -878) - -656) & -662071039
    var14 = 1062112774 - arg9 ^ -614606170 | arg10
    var15 = -571040915 ^ var14 & arg9 - 678
    var16 = arg10 & var13 ^ arg10 + -287
    if var15 < var11:
        var17 = (arg9 + var12 | var13) ^ arg10
    else:
        var17 = arg9 ^ arg10
    var18 = ((var15 + 303233629) + -1949621920) & var13
    var19 = 996 + 281 & var15 | var11
    var20 = (var14 + arg10 - -464585061) ^ var11
    var21 = var12 | (var18 | var19) ^ var15
    var22 = (var20 | -155107961) & var12 ^ var14
    var23 = (482085919 & var16) & var22
    result = arg9 ^ (var11 ^ var15 - var12 | var12)
    return result
class class4(object):
    def func3(self, arg5, arg6):
        return 0
class class2(class4):
    def func3(self, arg3, arg4):
        result = arg3 | arg3
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 44'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
